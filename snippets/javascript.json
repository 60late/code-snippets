{
  "Creat variable for const": {
    "prefix": "const",
    "body": "const ${1:variable} = ${0}"
  },

  "Creat variable for let": {
    "prefix": "let",
    "body": "let ${1:variable} = ${0}"
  },

  "Assign for": {
    "prefix": "assign",
    "body": "${1:variable} = ${0}"
  },

  "Creat Variable for Object": {
    "prefix": "key",
    "body": "${1:key}: ${2}, ${0}"
  },

  "Method": {
    "prefix": "method",
    "body": ["${1:name}(${2:params}) {", "\t${3}", "}$0"],
    "description": "a method whitout 'function'"
  },

  "Reture a promise": {
    "prefix": "promise",
    "body": ["new Promise((resolve, reject) => {", "\t${1}", "})"],
    "description": "A new Promise "
  },

  "Then-Catch statement": {
    "prefix": "then catch",
    "body": [
      ".then((${1:result}) => {",
      "\t${2}",
      "}).catch((${3:err}) => {",
      "\t${4}",
      "})"
    ],
    "description": "Then-Catch statement, Add the .then and .catch methods to handle promises"
  },

  "Arrow function": {
    "prefix": "arrow function",
    "body": ["(${1}) => {", "\t${2}", "}"],
    "description": "An arrow function"
  },

  "Property get": {
    "prefix": "property get",
    "body": ["get ${1:propertyName}() {", "\treturn this.${0}", "}"],
    "description": "A getter property inside a class"
  },

  "Property set": {
    "prefix": "property set",
    "body": ["set ${1:propertyName}(${2:value}) {", "\t${0}", "}"],
    "description": "A setter property inside a class"
  },

  "Print to console": {
    "prefix": "log",
    "body": ["console.log('${1:value}:',${1:value})"],
    "description": "Log output to console"
  },

  "Print to console with number": {
    "prefix": "log n",
    "body": "console.log('(current:${1:number})${2:value}:',${2:value})",
    "description": "Log output to console"
  },

  "Import external module": {
    "prefix": "import plus",
    "body": "import ${2:moduleName} from '${1|@,.,~,..|}'",
    "description": "Import external module plus"
  },

  "Import everything from module": {
    "prefix": "import everything",
    "body": "import * as ${2:alias} from '${1|@,.,~,..|}'$0",
    "description": "Imports everything as alias from the module"
  },

  "Require": {
    "prefix": "require",
    "body": "require('${1:package}')",
    "description": "Require a package"
  }
}
