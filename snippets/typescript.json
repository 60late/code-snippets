{
	"Creat object":{
		"prefix": "obj",
		"body": "\"${1:obj}\":{ $2 }"
	},
	"Create a promise": {
		"prefix": "promise",
		"body": "return new Promise((resolve, reject) => {\n\t${1}\n})",
		"description": "Creates and returns a new Promise"
	},

	"Then-Catch statement": {
		"prefix": "then catch",
		"body": ".then((${1:result}) => {\n\t${2}\n}).catch((${3:err}) => {\n\t${4}\n})",
		"description": "Then-Catch statement, Add the .then and .catch methods to handle promises"
	  },
	"Assign for":{
		"prefix": "assign",
		"body": "${1:variable} = ${0}",
	},
	"Creat variable for const":{
	  "prefix": "const",
	  "body": "const ${1:variable} = ${0}",
	},
	"Creat variable for let":{
	  "prefix": "let",
	  "body": "let ${1:variable} = ${0}",
	},
	"Creat variable for object":{
	  "prefix": "key",
	  "body": "${1:key}: ${0}",
	},
	"Anonymous function": {
		"prefix": "anonymous function",
		"body": "(${1:params}) => {\n\t${2}\n}",
		"description": "Creates an anonymous function in ES6 syntax"
	},
	"Property Get": {
		"prefix": "property get",
		"body": "get ${1:propertyName}() {\n\treturn this.${0}\n}",
		"description": "Creates a getter property inside a class in ES6 syntax"
	  },
	"Property Set": {
		"prefix": "property set",
		"body": "set ${1:propertyName}(${2:value}) {\n\t${0}\n}",
		"description": "Creates a setter property inside a class in ES6 syntax"
	  },
	"Print to console": {
	  "prefix": "log",
	  "body": [
	  "console.log('${1:value}:',${1:value})",
	  ],
	  "description": "Log output to console"
	},
	"Print to console with number": {
	  "prefix": "log n",
	  "body":"console.log('(current:${1:number})${2:value}:',${2:value})",
	  "description": "Log output to console"
	},
	"Import external module": {
		"prefix": "import plus",
		"body": "import ${2:moduleName} from '${1|@,.,~,..|}'",
		"description": "Import external module plus"
	},
	"Import everything from module": {
		"prefix": "import everything",
		"body": "import * as ${2:alias} from '${1|@,.,~,..|}'$0",
		"description": "Imports everything as alias from the module"
	  },
	"Require": {
		"prefix": "require",
		"body": "require('${1:package}')",
		"description": "Require a package"
	},

	// vue script
	"Vue Data": {
		"prefix": "vue data",
		"body": ["data() {", "\treturn {", "\t\t${1:key}: ${2:value}", "\t}", "},"],
		"description": "Vue Component Data"
	},
}
